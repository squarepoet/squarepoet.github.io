webpackHotUpdate_N_E("pages/midi",{

/***/ "./apps/shared/midi/LUMIKeys.ts":
/*!**************************************!*\
  !*** ./apps/shared/midi/LUMIKeys.ts ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var webmidi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! webmidi */ \"./node_modules/webmidi/webmidi.min.js\");\n/* harmony import */ var webmidi__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(webmidi__WEBPACK_IMPORTED_MODULE_0__);\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n // This approach was informed by:\n// https://github.com/benob/LUMI-lights/blob/master/SYSEX.txt\n// https://github.com/WeAreROLI/roli_blocks_basics/blob/main/blocks/roli_BlockConfigId.h\n// Note: You can drag *.littlefoot programs into the ROLI Dashboard to customize the program running on the LUMI Keys.\n\nvar LUMIKeys;\n\n(function (_LUMIKeys) {\n  var ROLI_MANUFACTURER_ID = [0x00, 0x21, 0x10];\n  var inputs = [];\n  var outputs = [];\n  var logOutput = null; // The DEVICE_ID might be different!\n  // We should allow the user of this page to customize the device ID.\n  // Maybe 0x37 was the kickstarter version of LUMI? How do we query the device ID?\n  // 0x00    => Works 100% for ronyeh's LUMI.\n  // 0x07    => Works 100% for ronyeh's LUMI.\n  // 0x37    => Works for benob's LUMI, but NOT for ronyeh's LUMI.\n  // let deviceID = 0x07;\n\n  var deviceID = 0x00;\n\n  function setDeviceID(devID) {\n    deviceID = devID;\n  }\n\n  function isLUMIKeys(io) {\n    return io.manufacturer.startsWith(\"ROLI\") && io.name.startsWith(\"LUMI\");\n  }\n\n  function messageMatches(msgData, msgString) {\n    return getDataAsHexString(msgData) === msgString;\n  } // Return MIDI data as an uppercase string of hex numbers, space delimited.\n  // We do not include the prefix 0x.\n  // Example:\n  //     \"F0 00 21 10 77 47 00 00 00 00 00 04 00 00 2C F7\"\n\n\n  function getDataAsHexString(msgData) {\n    if (!msgData || msgData.length === 0) {\n      return \"\";\n    }\n\n    var hexStrings = [];\n\n    var _iterator = _createForOfIteratorHelper(msgData),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _byte = _step.value;\n        hexStrings.push(_byte.toString(16).padStart(2, \"0\").toUpperCase());\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return hexStrings.join(\" \");\n  }\n\n  function logMessageAsHex(msgData) {\n    logOutput(getDataAsHexString(msgData));\n  }\n\n  function logMessageAsUTF8(msgData) {\n    var dataString = new TextDecoder(\"utf-8\").decode(msgData);\n    logOutput(dataString);\n  }\n\n  function connect() {\n    var _iterator2 = _createForOfIteratorHelper(webmidi__WEBPACK_IMPORTED_MODULE_0___default.a.inputs),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var i = _step2.value;\n\n        if (isLUMIKeys(i)) {\n          inputs.push(i);\n          i.addListener(\"midimessage\", \"all\", function (e) {\n            logMessageAsHex(e.data); // logMessageAsUTF8(e.data);\n\n            if (messageMatches(e.data, \"F0 00 21 10 77 47 00 00 00 00 00 04 00 00 2C F7\")) {\n              logOutput(\"POWER BUTTON PRESSED\");\n            }\n\n            if (messageMatches(e.data, \"F0 00 21 10 77 47 00 00 00 00 00 04 04 00 38 F7\")) {\n              logOutput(\"OCTAVE DOWN PRESSED\");\n            }\n\n            if (messageMatches(e.data, \"F0 00 21 10 77 47 00 00 00 00 00 04 08 00 44 F7\")) {\n              logOutput(\"OCTAVE UP PRESSED\");\n            }\n          });\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    var _iterator3 = _createForOfIteratorHelper(webmidi__WEBPACK_IMPORTED_MODULE_0___default.a.outputs),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var o = _step3.value;\n\n        if (isLUMIKeys(o)) {\n          logOutput(\"Found LUMI Keys with output port ID: \" + o.id);\n          outputs.push(o);\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n\n  _LUMIKeys.connect = connect;\n\n  function sendSysExToAllDevices(sysexCMD) {\n    var _iterator4 = _createForOfIteratorHelper(outputs),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var output = _step4.value;\n        output.sendSysex(ROLI_MANUFACTURER_ID, sysexCMD);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  }\n\n  function sendCommandToAllDevices(command) {\n    var commandWithHeader = [0x77, deviceID].concat(command);\n    var checksum = createChecksum(command);\n    var commandWithHeaderAndCheckSum = commandWithHeader.concat(checksum);\n    sendSysExToAllDevices(commandWithHeaderAndCheckSum);\n  }\n\n  function createChecksum(values) {\n    var sum = values.length;\n\n    for (var i = 0; i < values.length; i++) {\n      sum = sum * 3 + values[i] & 0xff;\n    }\n\n    return sum & 0x7f;\n  }\n\n  function getClickHandler_SetScaleRoot(rootNote) {\n    return function () {\n      switch (rootNote) {\n        case \"C\":\n        default:\n          sendCommandToAllDevices([0x10, 0x30, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00]);\n          break;\n\n        case \"C#\":\n          sendCommandToAllDevices([0x10, 0x30, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00]);\n          break;\n\n        case \"D\":\n          sendCommandToAllDevices([0x10, 0x30, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00]);\n          break;\n\n        case \"D#\":\n          sendCommandToAllDevices([0x10, 0x30, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00]);\n          break;\n\n        case \"E\":\n          sendCommandToAllDevices([0x10, 0x30, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00]);\n          break;\n\n        case \"F\":\n          sendCommandToAllDevices([0x10, 0x30, 0x23, 0x01, 0x00, 0x00, 0x00, 0x00]);\n          break;\n\n        case \"F#\":\n          sendCommandToAllDevices([0x10, 0x30, 0x43, 0x01, 0x00, 0x00, 0x00, 0x00]);\n          break;\n\n        case \"G\":\n          sendCommandToAllDevices([0x10, 0x30, 0x63, 0x01, 0x00, 0x00, 0x00, 0x00]);\n          break;\n\n        case \"G#\":\n          sendCommandToAllDevices([0x10, 0x30, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00]);\n          break;\n\n        case \"A\":\n          sendCommandToAllDevices([0x10, 0x30, 0x23, 0x02, 0x00, 0x00, 0x00, 0x00]);\n          break;\n\n        case \"A#\":\n          sendCommandToAllDevices([0x10, 0x30, 0x43, 0x02, 0x00, 0x00, 0x00, 0x00]);\n          break;\n\n        case \"B\":\n          sendCommandToAllDevices([0x10, 0x30, 0x63, 0x02, 0x00, 0x00, 0x00, 0x00]);\n          break;\n      }\n    };\n  }\n\n  _LUMIKeys.getClickHandler_SetScaleRoot = getClickHandler_SetScaleRoot;\n\n  function getClickHandler_SetBrightness(brightnessValue) {\n    return function () {\n      var command = null;\n\n      switch (brightnessValue) {\n        case 0:\n          command = [0x10, 0x40, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00];\n          break;\n\n        case 1:\n          command = [0x10, 0x40, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00];\n          break;\n\n        case 10:\n          command = [0x10, 0x40, 0x44, 0x02, 0x00, 0x00, 0x00, 0x00];\n          break;\n\n        case 20:\n          command = [0x10, 0x40, 0x04, 0x05, 0x00, 0x00, 0x00, 0x00];\n          break;\n\n        case 25:\n          command = [0x10, 0x40, 0x24, 0x06, 0x00, 0x00, 0x00, 0x00];\n          break;\n\n        case 50:\n          command = [0x10, 0x40, 0x44, 0x0c, 0x00, 0x00, 0x00, 0x00];\n          break;\n\n        case 75:\n          command = [0x10, 0x40, 0x64, 0x12, 0x00, 0x00, 0x00, 0x00];\n          break;\n\n        case 100:\n        default:\n          command = [0x10, 0x40, 0x04, 0x19, 0x00, 0x00, 0x00, 0x00];\n          break;\n      }\n\n      sendCommandToAllDevices(command);\n    };\n  }\n\n  _LUMIKeys.getClickHandler_SetBrightness = getClickHandler_SetBrightness;\n\n  function getClickHandler_ResetToFactorySettings() {\n    return function () {\n      logOutput(\"Factory Reset!\");\n      sendSysExToAllDevices([0x77, 0x07, 0x11, 0x14]);\n      sendSysExToAllDevices([0x49]);\n    };\n  }\n\n  _LUMIKeys.getClickHandler_ResetToFactorySettings = getClickHandler_ResetToFactorySettings;\n\n  function getClickHandler_SwitchToColorMode(modeNumber) {\n    return function () {\n      var command = null;\n      logOutput(\"Switch to Mode \" + modeNumber);\n\n      switch (modeNumber) {\n        case 1:\n        default:\n          command = [0x10, 0x40, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]; // Activate Mode 1\n\n          break;\n\n        case 2:\n          command = [0x10, 0x40, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00]; // Activate Mode 2\n\n          break;\n\n        case 3:\n          command = [0x10, 0x40, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00]; // Activate Mode 3\n\n          break;\n\n        case 4:\n          command = [0x10, 0x40, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00]; // Activate Mode 4\n\n          break;\n      }\n\n      sendCommandToAllDevices(command);\n    };\n  }\n\n  _LUMIKeys.getClickHandler_SwitchToColorMode = getClickHandler_SwitchToColorMode;\n\n  function getClickHandler_SetColorMode(modeNumber, modeType) {\n    return function () {\n      logOutput(\"Set color of mode: \" + modeNumber + \" to \" + modeType);\n      var command = null;\n\n      switch (modeType) {\n        case \"pro\":\n          switch (modeNumber) {\n            case 1:\n            default:\n              command = [0x10, 0x40, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00]; // Mode 1 => pro\n\n              break;\n\n            case 2:\n              command = [0x10, 0x30, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00]; // Mode 2 => pro\n\n              break;\n\n            case 3:\n              command = [0x10, 0x20, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00]; // Mode 3 => pro\n\n              break;\n\n            case 4:\n              command = [0x10, 0x10, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00]; // Mode 4 => pro\n\n              break;\n          }\n\n          break;\n\n        case \"user\":\n          /*\n          01:27:17.515\tTo LUMI Keys BLOCK\tSysEx\t\tROLI 16 bytes\tF0 00 21 10 77 07 10 40 2C 00 00 00 00 00 3C F7\n          01:27:19.201\tTo LUMI Keys BLOCK\tSysEx\t\tROLI 16 bytes\tF0 00 21 10 77 07 10 30 2D 00 00 00 00 00 1F F7\n          01:27:20.889\tTo LUMI Keys BLOCK\tSysEx\t\tROLI 16 bytes\tF0 00 21 10 77 07 10 20 2E 00 00 00 00 00 02 F7\n          01:27:22.667\tTo LUMI Keys BLOCK\tSysEx\t\tROLI 16 bytes\tF0 00 21 10 77 07 10 10 2F 00 00 00 00 00 65 F7\n             */\n          command = [0x10, 0x40, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00]; // Mode 1\n\n          logOutput(\"ONLY MODE 1 IMPLEMENTED\");\n\n          switch (modeNumber) {\n            case 1:\n            default:\n              break;\n\n            case 2:\n              break;\n\n            case 3:\n              break;\n\n            case 4:\n              break;\n          }\n\n          break;\n\n        case \"piano\":\n          command = [0x10, 0x40, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x00]; // Mode 1\n\n          logOutput(\"ONLY MODE 1 IMPLEMENTED\");\n\n          switch (modeNumber) {\n            case 1:\n            default:\n              break;\n\n            case 2:\n              break;\n\n            case 3:\n              break;\n\n            case 4:\n              break;\n          }\n\n          break;\n\n        case \"stage\":\n          switch (modeNumber) {\n            case 1:\n            default:\n              command = [0x10, 0x40, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00]; // Mode 1\n\n              break;\n\n            case 2:\n              command = [0x10, 0x30, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00]; // Mode 2\n\n              break;\n\n            case 3:\n              command = [0x10, 0x20, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00]; // Mode 3\n\n              break;\n\n            case 4:\n              command = [0x10, 0x10, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00]; // Mode 4\n\n              break;\n          }\n\n          break;\n\n        case \"rainbow\":\n        default:\n          switch (modeNumber) {\n            case 1:\n            default:\n              command = [0x10, 0x40, 0x0c, 0x01, 0x00, 0x00, 0x00, 0x00]; // Mode 1\n\n              break;\n\n            case 2:\n              command = [0x10, 0x30, 0x0d, 0x01, 0x00, 0x00, 0x00, 0x00]; // Mode 2\n\n              break;\n\n            case 3:\n              command = [0x10, 0x20, 0x0e, 0x01, 0x00, 0x00, 0x00, 0x00]; // Mode 3\n\n              break;\n\n            case 4:\n              command = [0x10, 0x10, 0x0f, 0x01, 0x00, 0x00, 0x00, 0x00]; // Mode 4\n\n              break;\n          }\n\n          break;\n      }\n\n      sendCommandToAllDevices(command);\n    };\n  }\n\n  _LUMIKeys.getClickHandler_SetColorMode = getClickHandler_SetColorMode;\n\n  function getClickHandler_SetScaleType(rootNote) {\n    return function () {\n      var command = null;\n\n      switch (rootNote) {\n        case \"chromatic\":\n          command = [0x10, 0x60, 0x42, 0x04, 0x00, 0x00, 0x00, 0x00]; // chromatic\n\n          break;\n\n        case \"major\":\n        default:\n          command = [0x10, 0x60, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]; // major\n\n          break;\n\n        case \"minor\":\n          command = [0x10, 0x60, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00]; // minor\n\n          break;\n\n        case \"pentatonic-neutral\":\n          command = [0x10, 0x60, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00]; // pentatonic neutral\n\n          break;\n\n        case \"pentatonic-major\":\n          command = [0x10, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00]; // pentatonic major\n\n          break;\n\n        case \"pentatonic-minor\":\n          command = [0x10, 0x60, 0x22, 0x01, 0x00, 0x00, 0x00, 0x00]; // pentatonic minor\n\n          break;\n\n        case \"blues\":\n          command = [0x10, 0x60, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00]; // blues\n\n          break;\n\n        case \"harmonic-minor\":\n          command = [0x10, 0x60, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00]; // harmonic minor\n\n          break;\n\n        case \"dorian\":\n          command = [0x10, 0x60, 0x62, 0x01, 0x00, 0x00, 0x00, 0x00]; // dorian\n\n          break;\n\n        case \"phrygian\":\n          command = [0x10, 0x60, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00]; // phrygian\n\n          break;\n\n        case \"lydian\":\n          command = [0x10, 0x60, 0x22, 0x02, 0x00, 0x00, 0x00, 0x00]; // lydian\n\n          break;\n\n        case \"mixolydian\":\n          command = [0x10, 0x60, 0x42, 0x02, 0x00, 0x00, 0x00, 0x00]; // mixolydian\n\n          break;\n\n        case \"locrian\":\n          command = [0x10, 0x60, 0x62, 0x02, 0x00, 0x00, 0x00, 0x00]; // locrian\n\n          break;\n\n        case \"whole-tone\":\n          command = [0x10, 0x60, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00]; // whole tone\n\n          break;\n\n        case \"arabic-a\":\n          command = [0x10, 0x60, 0x22, 0x02, 0x00, 0x00, 0x00, 0x00]; // arabic (a)\n\n          break;\n\n        case \"arabic-b\":\n          command = [0x10, 0x60, 0x42, 0x03, 0x00, 0x00, 0x00, 0x00]; // arabic (b)\n\n          break;\n\n        case \"japanese\":\n          command = [0x10, 0x60, 0x62, 0x03, 0x00, 0x00, 0x00, 0x00]; // japanese\n\n          break;\n\n        case \"ryukyu\":\n          command = [0x10, 0x60, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00]; // ryukyu\n\n          break;\n\n        case \"8-tone-spanish\":\n          command = [0x10, 0x60, 0x22, 0x04, 0x00, 0x00, 0x00, 0x00]; // 8-tone spanish\n\n          break;\n      }\n\n      sendCommandToAllDevices(command);\n    };\n  }\n\n  _LUMIKeys.getClickHandler_SetScaleType = getClickHandler_SetScaleType;\n\n  function getClickHandler_GetSerialNumber() {\n    return function () {\n      sendSysExToAllDevices([0x78, 0x3f]);\n    };\n  }\n\n  _LUMIKeys.getClickHandler_GetSerialNumber = getClickHandler_GetSerialNumber;\n\n  function getClickHandler_Highlight(noteName) {\n    return function () {\n      var _iterator5 = _createForOfIteratorHelper(outputs),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var output = _step5.value;\n          output.playNote(noteName, \"all\", {\n            duration: 1200\n            /* ms */\n\n          });\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    };\n  }\n\n  _LUMIKeys.getClickHandler_Highlight = getClickHandler_Highlight;\n\n  function getClickHandler_SetColorGlobalKey() {\n    return function () {\n      //const command = [0x10, 0x20, 0x64, 0x3f, 0x00, 0x00, 0x7e, 0x03]; // blue\n      var command = [0x10, 0x20, 0x04, 0x40, 0x7f, 0x7f, 0x7f, 0x03]; // yellow\n      // 10 20 64 3F 00 00 7E 03 // blue\n      // 10 20 04 40 7F 00 7E 03 // green\n      // 10 20 04 00 00 7F 7F 03 // red\n      // 10 20 04 40 7F 7F 7F 03 // yellow\n      // 10 20 64 3F 00 7F 7F 03 // magenta\n      // 10 20 64 7F 7F 00 7E 03 // cyan\n\n      sendCommandToAllDevices(command);\n    };\n  }\n\n  _LUMIKeys.getClickHandler_SetColorGlobalKey = getClickHandler_SetColorGlobalKey;\n\n  function getClickHandler_SetColorRootKey() {\n    return function () {\n      // const command = [0x10, 0x30, 0x64, 0x3f, 0x00, 0x00, 0x7e, 0x03]; // blue\n      var command = [0x10, 0x30, 0x64, 0x3f, 0x00, 0x00, 0x7e, 0x03]; // blue\n\n      sendCommandToAllDevices(command);\n    };\n  }\n\n  _LUMIKeys.getClickHandler_SetColorRootKey = getClickHandler_SetColorRootKey;\n\n  function getClickHandler_SetOctave(octaveNumber) {\n    return function () {\n      var command = null;\n\n      switch (octaveNumber) {\n        case 0:\n        default:\n          command = [0x10, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];\n          break;\n\n        case 1:\n          command = [0x10, 0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00];\n          break;\n\n        case 2:\n          command = [0x10, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00];\n          break;\n\n        case 3:\n          command = [0x10, 0x40, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00];\n          break;\n\n        case 4:\n          command = [0x10, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00];\n          break;\n\n        case 5:\n          command = [0x10, 0x40, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00];\n          break;\n\n        case -1:\n          command = [0x10, 0x40, 0x60, 0x7f, 0x7f, 0x7f, 0x7f, 0x03];\n          break;\n\n        case -2:\n          command = [0x10, 0x40, 0x40, 0x7f, 0x7f, 0x7f, 0x7f, 0x03];\n          break;\n\n        case -3:\n          command = [0x10, 0x40, 0x20, 0x7f, 0x7f, 0x7f, 0x7f, 0x03];\n          break;\n\n        case -4:\n          command = [0x10, 0x40, 0x00, 0x7f, 0x7f, 0x7f, 0x7f, 0x03];\n          break;\n      }\n\n      sendCommandToAllDevices(command);\n    };\n  }\n\n  _LUMIKeys.getClickHandler_SetOctave = getClickHandler_SetOctave;\n\n  function getClickHandler_TestXXX1() {\n    return function () {\n      var command = [0x01, 0x03, 0x00];\n      sendCommandToAllDevices(command);\n    };\n  }\n\n  _LUMIKeys.getClickHandler_TestXXX1 = getClickHandler_TestXXX1;\n\n  function getClickHandler_TestXXX2() {\n    return function () {\n      var command = [0x10, 0x77, 0x00, 0x01, 0x01, 0x00, 0x5d]; // const command = [0x77, 0x07, 0x10, 0x02, 0x44];\n\n      sendSysExToAllDevices(command);\n    };\n  }\n\n  _LUMIKeys.getClickHandler_TestXXX2 = getClickHandler_TestXXX2;\n\n  function attachLogOutput(logHandler) {\n    logOutput = logHandler;\n  }\n\n  _LUMIKeys.attachLogOutput = attachLogOutput;\n})(LUMIKeys || (LUMIKeys = {}));\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (LUMIKeys);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./apps/shared/midi/LUMIKeys.ts\n");

/***/ })

})